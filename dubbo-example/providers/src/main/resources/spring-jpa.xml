<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/data/jpa
       http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.2.xsd
	   http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">

	<!-- 引入mysql的配置文件 -->
	<context:property-placeholder location="classpath:mysql.properties"
		ignore-unresolvable="true" />

	<!-- 配置数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.url}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.pwd}"></property>
	</bean>

	<!-- 配置SessionFactory -->
	<bean id="localEntityManagerFactoryBean"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置JPA采用Hibernate底层框架实现 -->
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"></bean>
		</property>
		<!-- 扫描ORM映射关系 -->
		<property name="packagesToScan">
			<list>
				<value>org.framestudy.models</value>
			</list>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
			</props>
		</property>
	</bean>

	<!-- 配置事务管理器,并且ID必须为：transactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="localEntityManagerFactoryBean"></property>
	</bean>

	<!-- spring声明式事务管理方式，企业应用开发推荐 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" read-only="true" />
			<!-- propagation="REQUIRED" 事务的传播需要事务管理 isolation="REPEATABLE_READ" 事务的隔离级别选择可重复读 
				rollback-for="java.lang.Exception"异常的情况下回滚 read-only="false" 将连接修改为可写 -->
			<tx:method name="save*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="insert*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />

			<tx:method name="update*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="modify*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="change*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />

			<tx:method name="delete*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED" isolation="REPEATABLE_READ"
				rollback-for="java.lang.Exception" read-only="false" />

			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="query*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut
			expression="execution(* org.framestudy.provider.service.impl.*ServiceImpl.*(..))"
			id="serviceMethod" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="serviceMethod" />
	</aop:config>
	<aop:aspectj-autoproxy />

	<!-- 将JPA接口与SessionFactory进行关联 -->
	<jpa:repositories base-package="org.framestudy.provider.repository.jpa"
		entity-manager-factory-ref="localEntityManagerFactoryBean" />


</beans>